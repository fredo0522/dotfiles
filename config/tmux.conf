#
# General configurations
#

# Mouse can be used to select panes, select windows, resize panes
set -g mouse on

# Start windows and panes at 1, default 0
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber window numbers on closing a pane
set -g renumber-windows on

# Allow automatic renaming of windows
set -g allow-rename on

# Terminal default for better colors
set -g default-terminal "${TERM}"
set -sa terminal-features ',${TERM}:RGB'

# Enable undercurl and its colors
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Don't wait for an escape sequence after seeing the tmux prefix
set -s escape-time 0

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode
set -w -g wrap-search off

# Focus events enabled for terminals that support it
set -g focus-events on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# see bells for non-current window only
setw -g bell-action other

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# display and input
set -g display-time 1000
set -g message-style "fg=yellow,bold,bg=#32302f"
set -g message-command-style "fg=yellow,bold,bg=#32302f"
set -g mode-style "fg=yellow,bold,bg=#32302f"

#
# Status bar colors/format/highlight
#
set -g status-position top
set -g status-justify left
set -g status-interval 5 # Default 15 sec
set -g status-left-length 200
set -g status-right-length 200

# Colors
set -g status-style "fg=#bdae93"
set -g window-status-current-style "fg=#ea6962,bold,bg=#32302f"
set -g window-status-last-style "fg=#ebdbb2,italics,bg=#282828"

# Format style
set -g status-left "#[fg=blue,bold] ❐ #{session_name}  "
set -g status-right "#[fg=yellow,bold] $USER@#h "
set -g window-status-format " #{window_flags}#{window_index}:#{window_name} "
set -g window-status-current-format " #{window_index}:#{window_name} "

# Notifications
set -g window-status-bell-style "fg=yellow,bold,underscore"
set -g window-status-activity-style none

# Turn off distracting border highlights
set -ga pane-border-style "bg=default fg=#bdae93"
set -ga pane-active-border-style "bg=default fg=#bdae93"

#
# Bindings
#

# Set prefix to ctrl+space
unbind C-b
unbind C-Space
set -g prefix C-Space

# Refresh tmux.conf
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Open new pane with the path of the current pane
unbind c
bind c new-window -c '#{pane_current_path}'

# Switch between previous and next windows with repeatable
unbind l
bind -r l next-window
unbind h
bind -r h previous-window

# Fast toggle between current and last window
bind ^space last-window

# Intuitive window-splitting keys.
unbind "%"
bind "/" split-window -h -c '#{pane_current_path}'
unbind '"'
bind "-" split-window -v -c '#{pane_current_path}'

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Resizing with arrow keys
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Toggle to maximize the view of a pane and minimize it
unbind o
bind -r o resize-pane -Z

#
# Copy mode bindings
#

# vim keys in copy-mode and choose mode
setw -g mode-keys vi

# Begin selection like vim
bind -T copy-mode-vi 'v' send-keys -X begin-selection

# Yank what is selected
bind -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel

# Exit on copy-mode
bind -T copy-mode-vi Escape send-keys -X cancel

# Copy on clipboard with mouse selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel

# Prompt of search
bind -T copy-mode-vi / command-prompt -i -p "search down:" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "search up:" "send -X search-backward-incremental \"%%%\""
